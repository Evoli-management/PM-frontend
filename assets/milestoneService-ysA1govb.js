import{a as r}from"./index-DtKB0h8D.js";const i=(n,e)=>{if(console.error(`Error ${n}:`,e),e.response&&e.response.data&&e.response.data.message){const t=Array.isArray(e.response.data.message)?e.response.data.message.join(", "):e.response.data.message;throw console.error("Backend validation errors:",t),new Error(`Failed to ${n}. ${t}`)}throw new Error(`Failed to ${n}. ${e.message||"Please try again."}`)},d=async(n,e)=>{var t;try{const s={};if(e.title!==void 0&&(s.title=e.title),e.weight!==void 0&&(s.weight=parseFloat(e.weight)||1),e.dueDate!==void 0&&(s.dueDate=e.dueDate?new Date(e.dueDate).toISOString():null),e.done!==void 0)try{return console.log("Trying PATCH for milestone done status"),(await r.patch(`/milestones/${n}`,{done:e.done})).data}catch(o){console.log("PATCH failed, falling back to PUT:",o),s.done=e.done}console.log("Updating milestone with data:",s);try{return(await r.put(`/milestones/${n}`,s)).data}catch(o){if(((t=o.response)==null?void 0:t.status)===404)return console.log("PUT not supported, trying PATCH"),(await r.patch(`/milestones/${n}`,s)).data;throw o}}catch(s){i("updating milestone",s)}};export{d as updateMilestone};
